Longest Substring with Same Letters after Replacement (hard)
Leetcode Link: https://leetcode.com/problems/longest-repeating-character-replacement/
Solutution Link: https://leetcode.com/problems/longest-repeating-character-replacement/discuss/1964550/C%2B%2B-or-Sliding-Window-Approach-or-Time-Complexity-Explained

```
class Solution {
public:
    int characterReplacement(string s, int k) 
    {
        int windowStart = 0; 
        int maxRepeatingCount = 0;
        int answer = 0; 
        map<char, int> myMap;
        
        for(int windowEnd = 0; windowEnd < s.length(); windowEnd++)
        {
            //add/update the count of the char in map
            myMap[s[windowEnd]]++;
            //update the max reppeating count 
            maxRepeatingCount = max(maxRepeatingCount, myMap[s[windowEnd]]);
            
            //check if the window size - maxrepeating count 
            //(as we only need to care about char's we need to replace)
            if(((windowEnd - windowStart + 1) - maxRepeatingCount) > k )
            {
                //we need to move window to check for next available start. 
                //1) decrease the freqauency 
                myMap[s[windowStart]]--;
                
                //2)move the window start to new location 
                windowStart++;
            }
            
            //calculate max length after each iteration 
            answer = max(answer, (windowEnd - windowStart + 1));
        }
        
        return answer;
    }
};
```

Time Complexity: The time complexity will be O(N), where ‘N’ represents the number of letters in the input string.
